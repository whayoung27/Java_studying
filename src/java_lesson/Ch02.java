package java_lesson;

public class Ch02 {

	public static void main(String[] args) {
		// 01 진수 
		// 진수(진법) : 정수를 표현할 때 사용되는 수 표현방법 . 
		// JAVA는 기본적으로 10진수를 사용, 정수 리터럴을 작성할 때는 10진수가 기본적으로 사용됨. 
		
		
		// 02 서식문자를 사용한 진수 표현법 
		 System.out.println("");
		
		 // 10진수 변환 
		 System.out.printf("10진수 : %d\n", 0b10101101);    // 0b     : 2진수 
		 System.out.printf("10진수 : %d\n", 173);	         //         :10진수 
		 System.out.printf("10진수 : %d\n", 0255); 		 // 0 		: 8 진수 
		 System.out.printf("10진수 : %d\n", 0xAD); 		 // 0x 		: 16 진수 
		 System.out.println();
		 
		 
		// 8진수 변환 
		 System.out.printf("8진수 : %o\n", 0b10101101);    // 0b     : 2진수 
		 System.out.printf("8진수 : %o\n", 173);	         //         :10진수 
		 System.out.printf("8진수 : %o\n", 0255); 		 // 0 		: 8 진수 
		 System.out.printf("8진수 : %o\n", 0xAD); 		 // 0x 		: 16 진수 
		 System.out.println();
		 
				 
		// 16진수 변환 
		 System.out.printf("16진수 : %x\n", 0b10101101);    // 0b     : 2진수 
		 System.out.printf("16진수 : %x\n", 173);	         //         :10진수 
		 System.out.printf("16진수 : %x\n", 0255); 		 // 0 		: 8 진수 
		 System.out.printf("16진수 : %x\n", 0xAD); 		 // 0x 		: 16 진수 
		 System.out.println();
		 
		 
		 //Shift tab 들여쓰기. 
	// ==> 컴퓨터는 내부적으로 모든 값을 이진(binary) 데이터로 저장하고 있음. 
   //우리가 보는 것은 다양한 진법의 리터럴을 통해 그 값을 해석한 것 뿐임. == 형식 지정자 (서식문자)에 맞게 표현한 것 뿐임.
		 
		 
		 
		 //03 이진 데이터(2진수)의 양수 표현 방식 
		 
		 //컴퓨터는 10진수 데이터를 2진수 데이터로 변환하여 저장되는데 
		 //이때 2진수로 변환된 데이터 하나를 담는 최소 공간단위 == 비트 (bit) 
		 
		 //1 byte == 8 bit 
		 //1 byte 0 ~ 255 까지 표현 
		 
		 
		 
		 // 04 이전 데이터 (2진수)의 음수 표현 방식
		 
		 //CPU는 가산기(갓
		 
		 
		 
		 
			// 문제) 각 10진수를 2진수로 변환 후에 1의보수와 2의 보수를 구해보자 !!!

			//  10		->		0000 1010 (이진수)
			//	  		->		1111 0101(1의보수)
			//				   +0000 0001
			//--------------------------
			// -10				1111 0110 (2의보수)
			// 
			// 
			//
			// 8		->		0000 1000 (이진수)
			//			    	1111 0111 (1의보수)
			//			       +0000 0001 
			//	--------------------------
			// -8		->		1111 1000 (2의보수)
			// 
		
			//  20		->		0001 0100 (이진수)     ** 앞에 있는 1을 날리는것?? 이해 못함 
			//			->		1110 1011 (1의보수)
			//				   +0000 0001
			//--------------------------
			// -20				1110 1100 (2의보수)    ** 값이 왜 틀린지 모르겠음
			// 
			// 
			//
			// 120		->		0111 1000 (이진수)
			//			    	1000 0111 (1의보수)
			//			       +0000 0001 
			//	--------------------------
			// -120		->		1000 1000 (2의보수)
		
		
			//  97		->		0110 0001 (이진수)
			//			->		1001 1110 (1의보수)
			//				   +0000 0001
			//--------------------------
			// -97				1001 1111 (2의보수) 	 **값이 왜 틀린지 모르겠음
			// 
			// 
			//
			// 42		->		0010 1010 (이진수)
			//			    	1101 0101 (1의보수)
			//		  	       +0000 0001 
			//	--------------------------
			// -42		->		1101 0110 (2의보수)
		 
	}

}
